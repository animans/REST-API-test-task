{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "CRUDL по подпискам + summary",
        "title": "Subscriptions REST API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/service": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "List services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filter by service name (contains)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User UUID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Price",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "01-2024",
                        "description": "From month (MM-YYYY)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "03-2024",
                        "description": "To month   (MM-YYYY)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by (service_created_at, service_price, service_name)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order by (asc, desc)",
                        "name": "dir",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "50",
                        "description": "limit  (1 \u003c= limit \u003c= 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.ListResult"
                        }
                    }
                }
            },
            "post": {
                "description": "Создать запись подписки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Create service",
                "parameters": [
                    {
                        "description": "service payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreatedRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.CreatedRequest"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/service/summary": {
            "get": {
                "description": "Суммарная стоимость подписок за период с фильтрами",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Sum price by period",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name (contains)",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "User UUID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "01-2024",
                        "description": "From month (MM-YYYY)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "03-2024",
                        "description": "To month   (MM-YYYY)",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.SumResult"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/service/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Get service by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.CreatedRequest"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Update service",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update payload",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreatedRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "service"
                ],
                "summary": "Delete service",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.CreatedRequest": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "domain.ListResult": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.CreatedRequest"
                    }
                }
            }
        },
        "domain.SumResult": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                }
            }
        }
    }
}